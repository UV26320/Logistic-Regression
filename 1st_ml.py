# -*- coding: utf-8 -*-
"""1st_ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CeDXzIqo7R9IS4sr-jgMQ36oj4U2T6xG
"""

import pandas as pd
import numpy as np

df = pd.read_csv('/content/placement.csv')

df

df.shape

df.info()

"""

# Steps

# 0. Preprocess + EDA + Feature Selection
# 1. Extract input and output cols
# 2. Scale the values
# 3. Train test split
# 4. Train the model
# 5. Evaluate the model/model selection
# 6. Deploy the model
     """

df = df.iloc[:,1:]

df.head()

import matplotlib.pyplot as plt

plt.scatter(df['cgpa'],df['iq'] , c = df['placement'])

X = df.iloc[:,0:2]
Y = df.iloc[:,-1]

X

Y

from sklearn.model_selection import train_test_split

X_train,X_test,Y_train ,Y_test =  train_test_split(X,Y,test_size = 0.1)

X_train

X_test

Y_train

Y_test

"""## Now we scale a value"""

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()

X_train = scaler.fit_transform(X_train)

X_train

X_test = scaler.transform(X_test)

X_test

"""## Now we can train model

"""

from sklearn.linear_model import LogisticRegression

## now we can create clf object which is contained all funcationallty of logisticregression
clf = LogisticRegression()

## model train
clf.fit(X_train,Y_train)

Y_pred = clf.predict(X_test)

Y_test

"""## now we can check our model accuracy"""

from sklearn.metrics import accuracy_score

accuracy_score(Y_test,Y_pred)

"""## Decision regions in 2D"""

from mlxtend.plotting import plot_decision_regions

# Plotting decision regions
plot_decision_regions(X_train, Y_train.values, clf=clf, legend=2)

import pickle

pickle.dump(clf,open('Model.pkl','wb'))

